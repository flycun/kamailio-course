# 处理SIP对话内请求路由
# 确保对话中的消息按照已建立的路径正确路由，维护SIP对话状态一致性
# 1. 检查是否有To-tag确认是对话内请求
# 2. 处理松散路由的对话内消息
# 3. 特殊处理BYE、NOTIFY、ACK等方法
route[WITHINDLG] {
	# 检查消息是否包含To-tag，没有则不是对话内请求
	if (!has_totag()) return;

	# 处理松散路由的对话内请求
	# loose_route()检查Record-Route头部，验证消息是否应按记录路由转发
	if (loose_route()) {
		if (is_method("BYE")) {
            # BYE消息设置计费标志
            setflag(FLT_ACC); # 事务级计费标志
			setflag(FLT_DLG); # 对话级计费标志(用于CDR)
			setflag(FLT_ACCFAILED); # 失败事务计费标志(即使事务失败也要计费)
		} else if ( is_method("NOTIFY") ) {
			# 根据RFC 6665为对话内NOTIFY添加Record-Route
			record_route();
		}
		# 调用RELAY路由转发消息并退出
		route(RELAY);
		exit;
	}

	# 处理ACK方法
	if ( is_method("ACK") ) {
		if ( t_check_trans() ) {
			# 有匹配事务的ACK(通常是487或404响应后的ACK)
			route(RELAY);
			exit;
		} else {
			# 无匹配事务的ACK，忽略并丢弃
			exit;
		}
	}
	# 其他方法发送404响应并退出
	sl_send_reply("404", "Not here");
	exit;
}
