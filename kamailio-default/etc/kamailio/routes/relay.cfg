# 请求转发包装器路由
# 设置相应的事件路由并执行实际的消息转发
# 确保所有需要转发的消息都经过一致的处理流程
route[RELAY] {

	# 为转发请求启用额外的事件路由
	# 处理串行分叉、RTP转发处理等场景
	# branch_route: 分支路由关键字(系统固定)
	if (is_method("INVITE|BYE|SUBSCRIBE|UPDATE")) {
		# 如果未设置分支路由，则设置为MANAGE_BRANCH
		if(!t_is_set("branch_route")) t_on_branch("MANAGE_BRANCH");
	}
	# onreply_route: 回复路由关键字(系统固定)
	if (is_method("INVITE|SUBSCRIBE|UPDATE")) {
		# 如果未设置回复路由，则设置为MANAGE_REPLY
		if(!t_is_set("onreply_route")) t_on_reply("MANAGE_REPLY");
	}
	# failure_route: 失败路由关键字(系统固定)
	if (is_method("INVITE")) {
		# 如果未设置失败路由，则设置为MANAGE_FAILURE
		if(!t_is_set("failure_route")) t_on_failure("MANAGE_FAILURE");
	}

	# 执行实际的消息转发
	# 如果转发失败，发送错误响应
	if (!t_relay()) {
		sl_reply_error();
	}
	# 转发完成后退出路由处理
	exit;
}